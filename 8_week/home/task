1.
Обработка ошибок:
  Обработка на месте:
    assert - Ошибки программиста, разыменование nullptr((работает в дебаг режиме),+ некоторые средства отладки) 
    abort/terminate/exit - аварийное заавершение работы
    if-then-else - для проверки пользовательского ввода
  Передача инф об ошибке: 
    код возврата (от С)
    механизм исключений
    и другие

2.

Неудобство кодов возврата:
  -плохая читабельность 
  -перечисление
  -неудобство расширять/поддерживать 
  -проблема с Z(непонятно, где код, агде знак того, что она упала)
  -глобальная переменная(errno)
  -аргумент по ссылке(boost)
  -Конструктор, деструктор, операторы(они не возвращают)

3.

Особенности механизма исключений:
  Эффективность 
  Многоуровневость f->g-> h_>ошибка, нужно сказать и вернуться в f
  Преобразования

4. 

noexcept - 
-спецификатор времени компиляции - генерирует более оптимальный код // говорит что тут исключени не нужны и тут не нужно оптимизировать (геттеры можно помечать, swap(move версия) )
-оператор - функция явл noexcept по условию

5.

Гарантии безопасности исключений:
  -базовая - нет утечек памяти, инварианты не нарушены 
  -строгая гарантия - фу-я обеспечивает транзакционное поведение
  -гарантия отсутствия исключений (исключения не генерируются)

